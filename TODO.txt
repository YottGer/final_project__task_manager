Client:
- Styling
- Validation (if needed)
- Implement redux-toolkit for light/dark theme toggle
- Implement background fetching signaling

Server:
- validation

DB:
- create tagId <-> tagString table and save tagIds in the task record instead of text[]
- read about the text[] in postgreSQL and check wether it is easy to access it in native SQL. if not, change to link table
- make sure no repeated strings are stored in the db. for example - change the "status" column of a project from text
  to integer, refrencing the id of a row in a table with two columns - statusId, statusText.

Other:
- Manage packages
- Change path names to include - instead of _ (?)
- Catch all errors
- Make the entire code prettier
- in home page (?), error in the console:

A non-serializable value was detected in an action, in the path: `register`. Value: Æ’ register(key) {
    _pStore.dispatch({
      type: _constants__WEBPACK_IMPORTED_MODULE_0__.REGISTER,
      key: key
    });
  } 
Take a look at the logic that dispatched this action:  Object 
(See https://redux.js.org/faq/actions#why-should-type-be-a-string-or-at-least-serializable-why-should-my-action-types-be-constants) 
(To allow non-serializable values see: https://redux-toolkit.js.org/usage/usage-guide#working-with-non-serializable-data)

